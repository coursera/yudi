button.btn(data-default-message=_t("Change Password"), data-inflight-message=_t("Changing..."), data-success-message=_t("Changed!"), disabled) #{_t("Change Password")}

div.btn(
  data-default-message=_t("Change Password"),
  data-inflight-message=_t("Changing..."),
  data-success-message=_t("Changed!"), disabled)
  | #{_t("Change Password")}

  div
    span #{_t("simple string detection")}
    span #{_t("strings with #{interpolations}", {"interpolations":interpolations})}
    span #{_t("#{strings} with multiple #{interpolations}", {"strings":strings, "interpolations":interpolations})}
    span #{_t("strings with #{javascript.code()}", {"javascript.code()":javascript.code()})}
    span #{_t("strings with #{complicated + javascript.code(\"with quoted strings\")}", {"complicated + javascript.code(\"with quoted strings\")":complicated + javascript.code("with quoted strings")})}
    span #{_t(onlyVar)}
    span 123
    span !!!
    span $100
    span &nbsp;
    span !{_t("&nbsp; look! there's a trailing space")} 
    span !{_t("&nbsp; look! there's more space")}  
    span !{_t("&nbsp; look! there's a trailing space&nbsp;")}
    span !{_t("&nbsp; look! there's more space&nbsp;&nbsp;")}

    p
      | #{_t("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Hoc loco discipulos quaerere videtur, ut, qui asoti esse velint, philosophi ante fiant. Sed ne, dum huic obsequor, vobis molestus sim. In qua quid est boni praeter summam voluptatem, et eam sempiternam? Nihil sane.")}
      | #{_t("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quorum altera prosunt, nocent altera. Conferam avum tuum Drusum cum C. Cur id non ita fit? Duo Reges: constructio interrete. Equidem etiam Epicurum, in physicis quidem, Democriteum puto. At ille non pertimuit saneque fidenter: Istis quidem ipsis verbis, inquit; Scio enim esse quosdam, qui quavis lingua philosophari possint; At enim hic etiam dolore. Scaevolam M.")}
    p.
      #{_t("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut placet, inquit, etsi enim illud erat aptius, aequum cuique concedere. Scio enim esse quosdam, qui quavis lingua philosophari possint; An eum discere ea mavis, quae cum plane perdidiceriti nihil sciat? Haec mihi videtur delicatior, ut ita dicam, molliorque ratio, quam virtutis vis gravitasque postulat. Sed ad bona praeterita redeamus. Quis istum dolorem timet?")}
      #{_t("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ego quoque, inquit, didicerim libentius si quid attuleris, quam te reprehenderim. Nunc de hominis summo bono quaeritur; Itaque quantum adiit periculum! ad honestatem enim illum omnem conatum suum referebat, non ad voluptatem. Occultum facinus esse potuerit, gaudebit;")}

    attrtest(
      data-default-message=_t("this should be wrapped and recorded 1")
      data-inflight-message=_t("this should be wrapped and recorded 2")
      data-success-message=_t("this should be wrapped and recorded 3")
      data-form-error=_t('this should be wrapped and recorded 4')
      data-form-correct=_t('this should be wrapped and recorded 5')
      data-tooltip=_t('this should be wrapped and recorded 6')
      placeholder=_t('this should be wrapped and recorded 7')
      title="this should not be wrapped"
      type="this should not be wrapped"
      name="this should not be wrapped"
      id="this should not be wrapped"
      class="this should not be wrapped"
      style="this should not be wrapped"
      )
    input(
      type="text",
      title="Your Email Address",
      id="reset-email",
      placeholder=_t("Your Email Address"))
    input.coursera-reset-input(type="text", title="Your Email Address", id="reset-email", placeholder=_t("Your Email Address"))
    span
      strong #{_t("testing")}
      | #{_t("pipes")}

    span
      strong #{_t("testing")}
      | #{_t("really")}
      strong #{_t("annoying")}
      | #{_t("pipes")}
      strong #{_t("with #{annoying}", {"annoying":annoying})}
      | #{_t("interpolations annoying")}
      a(title=course.get('signatureTrackStatus')['signature_track_duration_left']) #{_t("#{course.get('signatureTrackStatus')['signature_track_duration_left']} left", {"course.get('signatureTrackStatus')['signature_track_duration_left']":course.get('signatureTrackStatus')['signature_track_duration_left']})}


- var textMap = {LEARN_FOR_FREE: _t('Learn "for" Free'), VIEW_CLASS_ARCHIVE: _t("View class archive"), GO_TO_CLASS: _t("Go to class"), VIEW_COURSE_RECORD: _t("View course record"), COUNTDOWN: _t(course.getStartCountdown())};
- var tooltipMap = {CONGRATS_GET_VC: _t("Congratulations! Get your Verified Certificate."), CONGRATS_GET_SOA: _t("Congratulations! Get your Statement of Accomplishment."), DID_NOT_GET_SOA_GET_GRADE: _t("You did not earn a Statement of Accomplishment. Get your grade."), GRADING_IN_PROGRESS: _t("Grading in progress."),  GET_YOUR_GRADE: _t("Get your grade."), COURSE_NO_SOA: _t("This course does not release Statements of Accomplishment.")}
